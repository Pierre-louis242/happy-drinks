{"version":3,"sources":["components/establishments/Likes.js","components/establishments/Dislikes.js","components/establishments/Favoris.js","components/establishments/Establishment.js","base.js","components/App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["Likes","_this","this","react_default","a","createElement","className","onClick","props","addLike","Component","Dislikes","disLike","Favoris","addFavoris","style","color","backgroundcolor","Establishment","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","likeuh","dislikeuh","establishments_Favoris","establishment","name","description","establishments_Likes","establishments_Dislikes","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","base","Rebase","createClass","database","App","randomPseudo","possible","size","Math","floor","random","i","charAt","length","pseudo","searchStringUser","establishments","id","syncState","context","asArray","removeBinding","e","target","value","newEstablishment","push","Date","now","_this2","console","log","filter","searchText","toLowerCase","match","listEstablishment","map","establishments_Establishment","key","src","logo","alt","title","test","type","placeholder","onChange","handleChange","bind","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.332c4ac8.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Likes extends Component {\n\n    render() {\n        return (\n            <div className=\"likes\" onClick={()=> this.props.addLike()}>\n                <i className=\"fas fa-thumbs-up\"></i>\n            </div>\n        );\n    }\n}\n\nexport default Likes;","import React, { Component } from 'react'\n\nclass Dislikes extends Component {\n    render() {\n        return (\n            <div className=\"likes\" onClick={ ()=> this.props.disLike() }>\n                <i className=\"fas fa-thumbs-down\"></i>\n            </div>\n        );\n    }\n}\n\nexport default Dislikes;","import React, { Component } from 'react'\n\nclass Favoris extends Component {\n\n    render() {\n        return (\n            <div className=\"favoris\" >\n                <i \n                className=\"fas fa-star\" \n                onClick={()=> this.props.addFavoris()} \n                style={{color: this.props.backgroundcolor}}>\n                </i>\n            </div>\n        );\n    }\n}\n\nexport default Favoris;","\nimport React, { Component } from 'react'\nimport Likes from './Likes'\nimport Dislikes from './Dislikes'\nimport Favoris from './Favoris'\n\nclass Establishment extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            likeuh  : 0,\n            dislikeuh : 0,\n            backgroundcolor: 'black',\n        }\n    }\n\n    addLike = () => {\n        this.setState(state => ({\n            likeuh : state.likeuh + 1\n        }));  \n    }\n\n    disLike = () => {\n        this.setState(state => ({\n            dislikeuh : state.dislikeuh - 1\n        })); \n    }\n\n    addFavoris = () => {\n        this.setState(state => ({\n            backgroundcolor: state.backgroundcolor === 'black' ? 'yellow' : 'black'\n        }));\n    }\n    \n\n    render() {\n\n        return (\n            <div className='establishment' >\n                <Favoris addFavoris={this.addFavoris} backgroundcolor={this.state.backgroundcolor}/>\n                <h3>{ this.props.establishment.name }</h3>\n                { this.props.establishment.description }\n                <Likes addLike={ this.addLike } />\n                <p className=\"likesCount\">{ this.state.likeuh}</p>\n                <Dislikes disLike={ this.disLike }/>\n                <p className=\"likesCount\">{ this.state.dislikeuh }</p>\n            </div>\n        );\n    }\n}\n\nexport default Establishment;","import firebase from 'firebase';\nimport Rebase from 're-base'\n\n  // Initialize Firebase\nconst config = {\n    apiKey: \"AIzaSyBzpCgiXknvvzVbCSUd5ZmftAUU5LXPqEo\",\n    authDomain: \"happydrinks-25e05.firebaseapp.com\",\n    databaseURL: \"https://happydrinks-25e05.firebaseio.com\",\n    projectId: \"happydrinks-25e05\",\n    storageBucket: \"\",\n    messagingSenderId: \"42206336908\"\n};\n\nconst app = firebase.initializeApp(config)\nconst base = Rebase.createClass(app.database())\n\nexport {base}","\nimport React, { Component }  from 'react'\nimport logo                  from '../assets/logo.svg'\nimport '../css/App.css'\nimport Establishment         from './establishments/Establishment'\nimport {base} from '../base';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pseudo  : \"Inconnu\",\n      searchStringUser: \"\",\n      establishments : [\n        {\n            id          : \"0890786GH\",\n            name        : \"Biberium\",\n            description : \"Un super bar karaoké\"\n        },\n        {\n            id          : \"0890786GD\",\n            name        : \"Brew Dogs\",\n            description : \"Un super bar à bière\"\n        },\n        {\n            id          : \"MJLMH0389\",\n            name        : \"Batonier\",\n            description : \"Un super bar de fin de soirée\"\n        }\n      ],\n    }\n  }\n  \n  componentDidMount() {\n    this.firebase = base.syncState('establishments', {\n      context: this,\n      state: 'establishments',\n      asArray: true,\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.firebase);\n  }\n\n\n  randomPseudo = () => {\n    let randomPseudo    = \"\"\n    const possible      = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n    const size          = Math.floor(Math.random() * 10) + 5\n    for( let i=0; i < size; i++ ){\n        randomPseudo += possible.charAt(Math.floor(Math.random() * possible.length))\n    }\n    this.setState({\n        pseudo : randomPseudo\n    })\n  }\n\n  handleChange(e){\n    this.setState({searchStringUser: e.target.value});\n  }\n\n  test(){\n    let newEstablishment = this.state.establishments\n    newEstablishment.push({\n      id          : Date.now(),\n      name        : \"Truc\",\n      description : \"Un super bar de fin de soirée\"\n    })\n    this.setState({establishments: newEstablishment})\n  }\n\n\n  render() {\n\n    console.log(this.state);\n\n    const establishmentFilter = this.state.establishments.filter((searchText) => {\n      let search = searchText.name + \" \" + searchText.description;\n      return search.toLowerCase().match(this.state.searchStringUser);\n    })  \n\n    const listEstablishment = this.state.establishments.map( (establishment) => {  \n      return (\n        <Establishment\n          key={ establishment.id }\n          establishment={ establishment }\n        />\n        )\n    })\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          \n          <h2>Welcome \"{ this.state.pseudo }\" to { this.props.title }</h2>\n          <p> \n            <a onClick={ this.randomPseudo } >Changer le pseudo !</a> \n          </p>\n          <button onClick={()=>this.test()}>test</button>\n          <div>\n            <input\n                type=\"text\"\n                placeholder=\"search\"\n                value={this.state.searchStringUser}\n                onChange={this.handleChange.bind(this)}\n            />\n          </div>\n\n            Learn React\n        </header>\n\n        <div className=\"App-intro\">\n          { listEstablishment }\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React    from 'react';\nimport ReactDOM from 'react-dom';\nimport App      from './components/App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App title = \"HappyDrink\"/>,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}